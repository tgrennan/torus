#ifndef __LINUX_TORUS_H__
#define __LINUX_TORUS_H__

#define	TORUS		"torus"
#define	TORUS_VERSION	1
#define	TORUS_PREFIX	"te"

#define	TORUS_MIN_VERSION	1
#define	TORUS_MAX_VERSION	TORUS_VERSION
#define	TORUS_N_TOROID_BITS	16
#define	TORUS_MIN_TOROID_ID	0
#define	TORUS_MAX_TOROID_ID	((1 << TORUS_N_TOROID_BITS) - 1)
#define	TORUS_TOROIDS		TORUS_MAX_TOROID_ID + 1
#define	TORUS_N_NODE_BITS	6
#define	TORUS_MIN_NODE_ID	0
#define	TORUS_MAX_NODE_ID	((1 << TORUS_N_NODE_BITS) - 1)
#define	TORUS_NODES		TORUS_MAX_NODE_ID + 1
#define	TORUS_N_CLONE_BITS	8
/* CLONE_ID[0] is reserved for the node */
#define	TORUS_MIN_CLONE_ID	1
#define	TORUS_MAX_CLONE_ID	((1 << TORUS_N_CLONE_BITS) - 1)
#define	TORUS_MIN_CLONES	0
#define	TORUS_MAX_CLONES	TORUS_MAX_CLONE_ID + 1
#define	TORUS_DEFAULT_CLONES	0
#define	TORUS_MIN_ROWS		2
#define	TORUS_MAX_ROWS		8
#define	TORUS_DEFAULT_ROWS	3
#define	TORUS_MIN_COLS		2
#define	TORUS_MAX_COLS		8
#define	TORUS_DEFAULT_COLS	3
#define	TORUS_PORTS		8

enum {
	__TORUS_FIRST_ATTR,
	TORUS_VERSION_ATTR,
	TORUS_TOROID_ID_ATTR,
	TORUS_NODE_ID_ATTR,
	TORUS_CLONE_ID_ATTR,
	TORUS_CLONES_ATTR,
	TORUS_ROWS_ATTR,
	TORUS_COLS_ATTR,
	TORUS_NODE_ATTR,
	__TORUS_LAST_ATTR
#define	TORUS_LAST_ATTR		(__TORUS_LAST_ATTR - 1)
#define TORUS_POLICIES		__TORUS_LAST_ATTR
};

#endif /* __LINUX_TORUS_H__ */
